openapi: '3.0.3'
info:
  title: API Title
  version: '1.0'
servers:
  - url: http://localhost:3000/
paths: 
  /auth/register:
    post:
      summary: Registra un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
      responses:
        '201':
          description: Usuario creado exitosamente
        '400':
          description: Error de validación
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/login:
    post:
      summary: Inicia sesión de un usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Token de autenticación
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Credenciales inválidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users:
    get:
      summary: Obtiene una lista de todos los usuarios
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Crea un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
      responses:
        '201':
          description: Usuario creado exitosamente
        '400':
          description: Error de validación
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{id}:
    get:
      summary: Obtiene un usuario por ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario
          schema:
            type: integer
      responses:
        '200':
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Actualiza un usuario
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Usuario actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Elimina un usuario
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario
          schema:
            type: integer
      responses:
        '200':
          description: Usuario eliminado
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /companies:
    get:
      summary: Obtiene una lista de todos los compañías
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de compañias
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'
    post:
      summary: Crea una nueva compañia
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
      responses:
        '201':
          description: Compañia creada exitosamente
        '400':
          description: Error de validación
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /companies/{id}:
    get:
      summary: Obtiene una compañía por ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la compañia
          schema:
            type: integer
      responses:
        '200':
          description: Compañia encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '404':
          description: Compañía no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Actualiza un compañia
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la compaia
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
      responses:
        '200':
          description: Comapñía actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Elimina un compañía
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la compañia
          schema:
            type: integer
      responses:
        '200':
          description: Compañia eliminado
        '404':
          description: Compañía no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'            
    
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
        password:
          type: string
          format: password
      required:
        - username
        - email
        - password

    LoginRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
          format: password
      required:
        - email
        - password

    Error:
      type: object
      properties:
        message:
          type: string
        code:
          type: integer

    Register:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
          format: password
        confirmPassword:
          type: string
          format: password

    Company:
      type: object
      properties:
        name:
          type: string
        address:
          type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT